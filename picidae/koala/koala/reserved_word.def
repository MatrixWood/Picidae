#ifndef TOK
#define TOK(X)
#endif
#ifndef TOK_MATCH
#define TOK_MATCH(X, Y)
#endif
#ifndef AST_NODE_TYPE
#define AST_NODE_TYPE(X)
#endif
#ifndef AST_NODE_TYPE_MATCH
#define AST_NODE_TYPE_MATCH(X, Y) AST_NODE_TYPE(X)
#endif
#ifndef Operator_Precedence
#define Operator_Precedence(X)
#endif

TOK(tk_def)
TOK(tk_fun)
TOK(tk_while)
TOK(tk_for)
TOK(tk_if)
TOK(tk_else)
TOK(tk_ampamp)
TOK(tk_pipepipe)
TOK(tk_comma)
TOK(tk_auto)
TOK(tk_return)
TOK(tk_break)
TOK(tk_true)
TOK(tk_false)
TOK(tk_flass)
TOK(tk_attr)
TOK(tk_var)
TOK(tk_global)
TOK(tk_upper_global)
TOK(tk_underline)
TOK(tk_upper_line)
TOK(tk_upper_file)
TOK(tk_upper_func)
TOK(tk_upper_class)

TOK_MATCH(kl_def,               "def")
TOK_MATCH(kl_fun,               "fun")
TOK_MATCH(kl_while,             "while")
TOK_MATCH(kl_for,               "for")
TOK_MATCH(kl_if,                "if")
TOK_MATCH(kl_else,              "else")
TOK_MATCH(kl_ampamp,            "&&")
TOK_MATCH(kl_pipepipe,          "||")
TOK_MATCH(kl_comma,             ",")
TOK_MATCH(kl_auto,              "auto")
TOK_MATCH(kl_return,            "return")
TOK_MATCH(kl_break,             "break")
TOK_MATCH(kl_true,              "true")
TOK_MATCH(kl_false,             "false")
TOK_MATCH(kl_flass,             "class")
TOK_MATCH(kl_attr,              "attr")
TOK_MATCH(kl_var,               "var")
TOK_MATCH(kl_global,            "global")
TOK_MATCH(kl_upper_global,      "GLOBAL")
TOK_MATCH(kl_underline,         "_")
TOK_MATCH(kl_upper_line,        "__LINE__")
TOK_MATCH(kl_upper_file,        "__FILE__")
TOK_MATCH(kl_upper_func,        "__FUNC__")
TOK_MATCH(kl_upper_class,       "__CLASS__")



AST_NODE_TYPE(Id)
AST_NODE_TYPE(Fun_Call)
AST_NODE_TYPE(Unused_Return_Fun_Call)
AST_NODE_TYPE(Arg_List)
AST_NODE_TYPE(Equation)
AST_NODE_TYPE(Var_Decl)
AST_NODE_TYPE(Assign_Decl)
AST_NODE_TYPE(Array_Call)
AST_NODE_TYPE(Dot_Access)
AST_NODE_TYPE(Lambda)
AST_NODE_TYPE(Block)
AST_NODE_TYPE(Scopeless_Block)
AST_NODE_TYPE(Def)
AST_NODE_TYPE(While)
AST_NODE_TYPE(If)
AST_NODE_TYPE(For)
AST_NODE_TYPE(Ranged_For)
AST_NODE_TYPE(Inline_Array)
AST_NODE_TYPE(Inline_Map)
AST_NODE_TYPE(Return)
AST_NODE_TYPE(File)
AST_NODE_TYPE(Prefix)
AST_NODE_TYPE(Break)
AST_NODE_TYPE(Continue)
AST_NODE_TYPE(Map_Pair)
AST_NODE_TYPE(Value_Range)
AST_NODE_TYPE(Inline_Range)
AST_NODE_TYPE(Try)
AST_NODE_TYPE(Catch)
AST_NODE_TYPE(Finally)
AST_NODE_TYPE(Method)
AST_NODE_TYPE(Attr_Decl)
AST_NODE_TYPE(Logical_And)
AST_NODE_TYPE(Logical_Or)
AST_NODE_TYPE(Reference)
AST_NODE_TYPE(Switch)
AST_NODE_TYPE(Case)
AST_NODE_TYPE(Default)
AST_NODE_TYPE(Noop)
AST_NODE_TYPE(Class)
AST_NODE_TYPE(Binary)
AST_NODE_TYPE(Arg)
AST_NODE_TYPE(Global_Decl)
AST_NODE_TYPE(Constant)
AST_NODE_TYPE(Compiled)


AST_NODE_TYPE_MATCH(Id                             , "Id")
AST_NODE_TYPE_MATCH(Fun_Call                       , "Fun_Call")
AST_NODE_TYPE_MATCH(Unused_Return_Fun_Call         , "Unused_Return_Fun_Call")
AST_NODE_TYPE_MATCH(Arg_List                       , "Arg_List")
AST_NODE_TYPE_MATCH(Equation                       , "Equation")
AST_NODE_TYPE_MATCH(Var_Decl                       , "Var_Decl")
AST_NODE_TYPE_MATCH(Assign_Decl                    , "Assign_Decl")
AST_NODE_TYPE_MATCH(Array_Call                     , "Array_Call")
AST_NODE_TYPE_MATCH(Dot_Access                     , "Dot_Access")
AST_NODE_TYPE_MATCH(Lambda                         , "Lambda")
AST_NODE_TYPE_MATCH(Block                          , "Block")
AST_NODE_TYPE_MATCH(Scopeless_Block                , "Scopeless_Block")
AST_NODE_TYPE_MATCH(Def                            , "Def")
AST_NODE_TYPE_MATCH(While                          , "While")
AST_NODE_TYPE_MATCH(If                             , "If")
AST_NODE_TYPE_MATCH(For                            , "For")
AST_NODE_TYPE_MATCH(Ranged_For                     , "Ranged_For")
AST_NODE_TYPE_MATCH(Inline_Array                   , "Inline_Array")
AST_NODE_TYPE_MATCH(Inline_Map                     , "Inline_Map")
AST_NODE_TYPE_MATCH(Return                         , "Return")
AST_NODE_TYPE_MATCH(File                           , "File")
AST_NODE_TYPE_MATCH(Prefix                         , "Prefix")
AST_NODE_TYPE_MATCH(Break                          , "Break")
AST_NODE_TYPE_MATCH(Continue                       , "Continue")
AST_NODE_TYPE_MATCH(Map_Pair                       , "Map_Pair")
AST_NODE_TYPE_MATCH(Value_Range                    , "Value_Range")
AST_NODE_TYPE_MATCH(Inline_Range                   , "Inline_Range")
AST_NODE_TYPE_MATCH(Try                            , "Try")
AST_NODE_TYPE_MATCH(Catch                          , "Catch")
AST_NODE_TYPE_MATCH(Finally                        , "Finally")
AST_NODE_TYPE_MATCH(Method                         , "Method")
AST_NODE_TYPE_MATCH(Attr_Decl                      , "Attr_Decl")
AST_NODE_TYPE_MATCH(Logical_And                    , "Logical_And")
AST_NODE_TYPE_MATCH(Logical_Or                     , "Logical_Or")
AST_NODE_TYPE_MATCH(Reference                      , "Reference")
AST_NODE_TYPE_MATCH(Switch                         , "Switch")
AST_NODE_TYPE_MATCH(Case                           , "Case")
AST_NODE_TYPE_MATCH(Default                        , "Default")
AST_NODE_TYPE_MATCH(Noop                           , "Noop")
AST_NODE_TYPE_MATCH(Class                          , "Class")
AST_NODE_TYPE_MATCH(Binary                         , "Binary")
AST_NODE_TYPE_MATCH(Arg                            , "Arg")
AST_NODE_TYPE_MATCH(Global_Decl                    , "Global_Decl")
AST_NODE_TYPE_MATCH(Constant                       , "Constant")
AST_NODE_TYPE_MATCH(Compiled                       , "Compiled")


Operator_Precedence(Ternary_Cond)
Operator_Precedence(Logical_Or)
Operator_Precedence(Logical_And)
Operator_Precedence(Bitwise_Or)
Operator_Precedence(Bitwise_Xor)
Operator_Precedence(Bitwise_And)
Operator_Precedence(Equality)
Operator_Precedence(Comparison)
Operator_Precedence(Shift)
Operator_Precedence(Addition)
Operator_Precedence(Multiplication)
Operator_Precedence(Prefix)